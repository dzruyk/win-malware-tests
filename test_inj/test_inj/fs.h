#pragma once

enum flags {
	WO_CREAT = 1,	//always create file
	WO_EXCL = 2,	//open existing file
	WO_READ = 4,
	WO_WRITE = 8,
	WO_RDWR = WO_READ | WO_WRITE,
	WO_EXEC = 16,
	WO_ALL = WO_RDWR | WO_EXEC,
	WO_APPEND = 32,
	WO_SHARE_R = 64, //windows spec flag, try to share reads
};

enum attr {
	MOD_HIDDEN = 1,
	MOD_READONLY = 2,
	MOD_SYSTEM = 4,
};

/* 
 * Try to open file, 
 * return handle or 
 * INVALID_HANDLE_VALUE if fails
 */
HANDLE file_open(char *path, int flags, int attr);

bool file_close(HANDLE h);

/*
 * Attemts to read len bytes from handle h to buf.
 * return nr bytes readed or -1 if error occured.
 */
int file_read(HANDLE h, char *buf, int len);

/*
 * opens file and try to write buffer to it
 * its just wrapper arround sequence:
 * file_open, file_write, file_close
 */
bool file_write_to_file(char *file, char *buf, int sz);

/*
 * Attemts to write len bytes to handle h
 * return nr bytes writed or -1 if error occured.
 */
int file_write(HANDLE h, char *buf, int len);

/*
 * Write len bytes from buffer to handle or return false.
 */
bool file_write_all(HANDLE h, char *buf, int len);

/*
 * Read len bytes into buffer from handle or return false.
 */
bool file_read_all(HANDLE h, char *buf, int len);

/*
 * if succeeds return true and write to dst path of temp dir
 * if fails return false
 */
bool file_get_temp_dir(char *dst, int len);

/*
 * Create temp file with name preffix pref and suffix suf
 * and write to dst it name.
 * pref and suf may be NULL (if you want to create file without suffix or preffix
 * if len smaller than filename delete created file and
 * return false
 */
bool file_create_temp_file(char *dst, int dstlen, char *pref, char *suf);

/*
 * Delete file named fname.
 * return:
 *  true if succeeds
 *  false otherwise
 */
bool file_delete(char *fname);
