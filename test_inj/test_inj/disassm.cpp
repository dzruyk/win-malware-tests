#include "stdafx.h"

#include <Windows.h>

#include "../distorm3/include/distorm.h"

#include "log.h"
#include "test_inj.h"
#include "corehook.h"



#pragma comment(lib, "C:\\Documents and Settings\\Admin\\Рабочий стол\\test_inj\\Release\\disassm.lib")

int
get_opcode_len(LPVOID op)
{
	_DecodeResult res;
	_DecodedInst instruction[1];
	unsigned int readed;

	readed = 0;
#ifdef  _WIN64
	_DecodeType dt = Decode64Bits;
#else
	_DecodeType dt = Decode32Bits;
#endif


	res = distorm_decode(0,		// offset from begin of buffer
	    (const unsigned char*)op,
	    OPCODE_MAX_SIZE,
	    dt,
	    instruction,
	    1,				// Decode only one instruction
	    &readed);

	DEBUG(LOG_DEFAULT, "res = %d, readed = %d, sz = %d\n",
	    res,
	    readed,
	    instruction[0].size);

	if (res == DECRES_INPUTERR ||
	    readed == 0)
		return -1;
	
	return instruction[0].size;
}
