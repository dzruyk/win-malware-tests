#pragma once

#define ARRSZ(a) (sizeof(a)/sizeof(a[0]))

#define warn(fmt, ...) do { \
	fprintf(stderr, fmt,	\
        __VA_ARGS__);				\
} while (0)

#define myprintf(fmt, ...) do { \
	_tprintf(TEXT(fmt), __VA_ARGS__); \
} while (0)

#define error(st, fmt, ...) do { \
	fprintf(stderr, fmt,	\
        __VA_ARGS__);				\
	ExitProcess(st);			\
} while (0)

#define ARRSZ(a) (sizeof(a)/sizeof(a[0]))

#define assert(cond) do { \
	if (!(cond)) { \
		exit(1);\
	}\
} while(0)