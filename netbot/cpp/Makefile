#CC=g++.exe
#Set your linux cross compiler paths
#CC='i586-mingw32msvc-gcc'
#LD='i586-mingw32msvc-ld'
#EXTRA_OBJS = /usr/lib/gcc/i686-w64-mingw32/4.6/../../../../i686-w64-mingw32/lib/../lib/crt2.o \
#       /usr/lib/gcc/i686-w64-mingw32/4.6/crtbegin.o \
#       /usr/lib/gcc/i686-w64-mingw32/4.6/crtend.o
#LIBSPATH= -L/usr/lib/gcc/i686-w64-mingw32/4.6 \
#	  -L/usr/lib/gcc/i686-w64-mingw32/4.6/../../../../i686-w64-mingw32/lib/../lib \
#	  -L/usr/lib/gcc/i686-w64-mingw32/4.6/../../../../i686-w64-mingw32/lib

#Set your windows  PATHS
CC="D:\Program Files\CodeBlocks\MinGW\bin\mingw32-gcc.exe"
LD="D:\Program Files\CodeBlocks\MinGW\bin\ld.exe"
EXTRA_OBJS =  \
       D:/Program Files/CodeBlocks/MinGW/lib/gcc/mingw32/4.7.1/crtbegin.o \
       D:/Program Files/CodeBlocks/MinGW/lib/gcc/mingw32/4.7.1/crtend.o

LIBSPATH= -L"D:/Program Files/CodeBlocks/MinGW/lib"
  
ENTRY_POINT = _ENTRY_POINT

CFLAGS= -Wall -g
LDFLAGS= -static -e $(ENTRY_POINT)

TARGET = my_netbot.exe
OBJS = main.o sock.o corebot.o coreinstall.o common.o commands.o util.o file.o str.o

LIBS = -lws2_32 -lmsvcrt -ladvapi32 -luser32 -lkernel32 -lmsvcrt -lshlwapi \
        -lmsvcrt -lshlwapi



all: $(TARGET)

%.o: %.c
	$(CC) $(CFLAGS) -c $^

.PHONY: test
test:
	echo `pwd`
	echo $(PATH)
	
$(TARGET): $(OBJS)
	$(LD) $(LDFLAGS) -o $@ $(OBJS) $(LIBSPATH) $(LIBS)

clean:
	del *.o $(TARGET)
#rm -rf *~ *.o $(TARGET)
	
