#ifndef __COMMANDS_H__
#define __COMMANDS_H__

#include "common.h"

#define OPT_MAXSZ 1024

enum {
	CMD_UNKNOWN,
	CMD_ERR,
	CMD_NOP,
	CMD_BYE,
	CMD_SHUTDOWN,
	CMD_REBOOT,
	CMD_GET_INFO,
	CMD_GET_CLI,
	CMD_SLEEP,
	CMD_RECV_FILE,	/* with opt argument PATH */
	CMD_SEND_FILE,	/* with opt argument PATH */
	CMD_EXEC_FILE,	/* with opt argument PATH */ 
	CMD_SELF_DELETE,
};

struct command_ctx {
	int cmd;
	union {
		char path[OPT_MAXSZ];
		int val;
	};
};

struct bot;

typedef bool (*callback_t)(struct bot *bot, struct command_ctx *ctx);

struct commands {
	int id;
	const char *name;
	callback_t cb;
};

/*
 * Stub now, rewrite to binary package commands
#define PAYLOAD_SZ 1024

struct package {
	int version;
	int len;
	int flags;
	int cmd;
	char payload[PAYLOAD_SZ];
};
*/

int command_get(char *buf, int len, struct command_ctx *ctx);
bool command_run(struct bot *bot, struct command_ctx *ctx);

#endif
